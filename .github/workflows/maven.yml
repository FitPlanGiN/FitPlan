name: SpringBoot CI/CD Pipeline (Helm)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      #- name: Build and push images using spring-boot:build-image
       # env:
       #   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
       # run: |
       #   mvn clean spring-boot:build-image -DskipTests

      #- name: Building and pushing fitplanfrontend
       # run: |
       #   docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/fitplanfrontend:latest .
       #   echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #   docker push ${{ secrets.DOCKER_USERNAME }}/fitplanfrontend:latest
      #  working-directory: fitplanfrontend

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: 'fitplan'
          location: 'europe-central2-a'

      - name: Set up kubectl
        run: |
          kubectl config use-context gke_${{ secrets.PROJECT_ID }}_europe-central2-a_fitplan

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Check if MySQL disk exists
        run: |
          if ! gcloud compute disks describe mysql-disk --zone=europe-central2-a > /dev/null 2>&1; then
            gcloud compute disks create mysql-disk --size=10Gi --zone=europe-central2-a
          else
            echo "MySQL disk already exists, skipping creation."
          fi

      # Uninstall common-config if it exists
     # - name: Uninstall common-config
       # run: |
         # helm uninstall common-config || echo "common-config release does not exist, skipping uninstall."

      # Install common-config
      - name: Deploy common-config
        run: |
          helm upgrade --install common-config ./fitplan-helm/charts/common-config --wait

      # Uninstall configserver if it exists
      #- name: Uninstall configserver
        #run: |
         # helm uninstall configserver || echo "configserver release does not exist, skipping uninstall."

      # Install configserver
      - name: Deploy configserver
        run: |
          helm upgrade --install configserver ./fitplan-helm/charts/configserver --wait

      # Deploy other services
      - name: Deploy other services
        run: |
          helm upgrade --install fitplan-helm ./fitplan-helm \
            --dependency-update \
            --wait

      # Run frontend connection test
      - name: Run connection test to fitplanfrontend
        run: |
          helm test fitplan-helm --logs
