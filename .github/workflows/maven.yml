name: SpringBoot CI/CD Pipeline (Helm)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and push images using spring-boot:build-image
        run: |
          mvn clean spring-boot:build-image -DskipTests

      - name: Build and push fitplanfrontend
        run: |
          docker build --no-cache -t ${{ env.DOCKER_USERNAME }}/fitplanfrontend:${{ github.sha }} .
          echo ${{ env.DOCKER_PASSWORD }} | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin
          docker push ${{ env.DOCKER_USERNAME }}/fitplanfrontend:${{ github.sha }}
        working-directory: fitplanfrontend

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: 'fitplan'
          location: 'europe-central2-a'

      - name: Set up kubectl
        run: |
          kubectl config use-context gke_${{ env.PROJECT_ID }}_europe-central2-a_fitplan

      - name: Set up Helm
        uses: azure/setup-helm@v3


      - name: Check and create MySQL disk
        run: |
          if ! gcloud compute disks describe mysql-disk --zone=europe-central2-a > /dev/null 2>&1; then
            gcloud compute disks create mysql-disk --size=10Gi --zone=europe-central2-a
          else
            echo "MySQL disk already exists, skipping creation."
          fi

  deploy-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - "common-config"
          - "configserver"
          - "mysql"
          - "mongodb"
          - "zookeeper"
          - "broker"
          - "kafka-ui"
          - "schema-registry"
          - "keycloak"
          - "prometheus"
          - "loki"
          - "tempo"
          - "grafana"
          - "exercise"
          - "fitplan-ingress"
          - "fitplanfrontend"
          - "gateway"
          - "notification"
          - "validation"
          - "workout"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: 'fitplan'
          location: 'europe-central2-a'

      - name: Deploy ${{ matrix.service }}
        run: |
          retries=3
          for ((i=1; i<=retries; i++)); do
            if helm upgrade --install ${{ matrix.service }} ./fitplan-helm/charts/${{ matrix.service }} --wait --timeout 300s; then
              break
            elif [ "$i" -eq "$retries" ]; then
              echo "Helm command failed after $retries attempts for ${{ matrix.service }}."
              exit 1
            fi
            sleep 10
          done

      - name: Test FitPlan Frontend via Public IP
        run: |
          echo "Testing FitPlan frontend at http://34.107.231.170/"
          curl -v --fail http://34.107.231.170/ \
            && echo "FitPlan frontend is reachable!" \
            || (echo "FitPlan frontend check failed" && exit 1)

      - name: Upload deployment logs
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: ./logs/

