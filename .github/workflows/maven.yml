# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        
    - name: Building and pushing configserver
      run: mvn package dockerfile:push --file configserver/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing discoveryserver
      run: mvn package dockerfile:push --file discoveryserver/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing gateway
      run: mvn package dockerfile:push --file gateway/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing exercise
      run: mvn package dockerfile:push --file exercise/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing workout
      run: mvn package dockerfile:push --file workout/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing validation
      run: mvn package dockerfile:push --file validation/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing notification
      run: mvn package dockerfile:push --file notification/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME  }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Building and pushing fitplanfrontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/fitplanfrontend:latest .
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/fitplanfrontend:latest
      working-directory: fitplanfrontend

    - name: Azure login with Managed Identity
      uses: azure/login@v2
      with:
        auth-type: IDENTITY
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set AKS context
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
        kubectl config current-context

    - name: Deploy manifests to AKS
      run: |
        kubectl apply -f ./k8s/manifests/infrastructure
        kubectl apply -f ./k8s/manifests/applications
        
        

