name: SpringBoot CI/CD Pipeline (Helm)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          mvn clean spring-boot:build-image -DskipTests
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t $DOCKER_USERNAME/fitplanfrontend:latest ./fitplanfrontend
          docker push $DOCKER_USERNAME/fitplanfrontend:latest

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: 'fitplan'
          location: 'europe-central2-a'

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Deploy all Helm charts
        run: |
          charts=(
            "common-config"
            "configserver"
            "mysql"
            "mongodb"
            "zookeeper"
            "broker"
            "kafka-ui"
            "schema-registry"
            "keycloak"
            "prometheus"
            "loki"
            "tempo"
            "grafana"
            "exercise"
            "fitplan-ingress"
            "fitplanfrontend"
            "gateway"
            "notification"
            "validation"
            "workout"
          )

          for chart in "${charts[@]}"; do
            echo "Deploying chart: $chart"
            helm upgrade --install $chart ./fitplan-helm/charts/$chart --wait --timeout 300s || {
              echo "Deployment failed for $chart. Exiting."
              exit 1
            }
          done

      - name: Test FitPlan Frontend
        run: |
          echo "Testing FitPlan frontend at http://34.107.231.170/"
          curl -v --fail http://34.107.231.170/ || {
            echo "FitPlan frontend check failed."
            exit 1
          }
