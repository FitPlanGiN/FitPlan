---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config
data:
  application.properties: |
    spring.application.name=configserver
    server.port={{ .Values.server.port }}
    spring.profiles.active=native
    spring.cloud.config.server.native.search-locations={{ .Values.config.searchLocation }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: configserver
  template:
    metadata:
      labels:
        app: configserver
    spec:
      containers:
        - name: configserver
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.server.port }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.server.port }}
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.server.port }}
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: config-volume
              mountPath: /config/application.properties
              subPath: application.properties
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: configserver
  ports:
    - protocol: TCP
      port: {{ .Values.server.port }}
      targetPort: {{ .Values.server.port }}
  type: {{ .Values.service.type }}
