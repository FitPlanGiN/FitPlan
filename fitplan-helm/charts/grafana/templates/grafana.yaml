---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: GF_AUTH_ANONYMOUS_ENABLED
                  name: {{ .Release.Name }}-configmap
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              valueFrom:
                configMapKeyRef:
                  key: GF_AUTH_ANONYMOUS_ORG_ROLE
                  name: {{ .Release.Name }}-configmap
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              valueFrom:
                configMapKeyRef:
                  key: GF_AUTH_DISABLE_LOGIN_FORM
                  name: {{ .Release.Name }}-configmap
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-config
          configMap:
            name: {{ .Release.Name }}-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
data:
  GF_AUTH_ANONYMOUS_ENABLED: "{{ .Values.config.anonymousEnabled }}"
  GF_AUTH_ANONYMOUS_ORG_ROLE: "{{ .Values.config.anonymousOrgRole }}"
  GF_AUTH_DISABLE_LOGIN_FORM: "{{ .Values.config.disableLoginForm }}"
  datasource.yml: |
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: {{ .Values.datasources.prometheus.url }}
        editable: false
        jsonData:
          httpMethod: POST
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: tempo
      - name: Tempo
        type: tempo
        access: proxy
        orgId: 1
        url: {{ .Values.datasources.tempo.url }}
        basicAuth: false
        isDefault: true
        version: 1
        editable: false
        apiVersion: 1
        uid: tempo
        jsonData:
          httpMethod: GET
          tracesToLogs:
            datasourceUid: 'loki'
          nodeGraph:
            enabled: true
      - name: Loki
        type: loki
        uid: loki
        access: proxy
        orgId: 1
        url: {{ .Values.datasources.loki.url }}
        basicAuth: false
        isDefault: false
        version: 1
        editable: false
        apiVersion: 1
        jsonData:
          derivedFields:
            - datasourceUid: tempo
              matcherRegex: \[.+,(.+?),
              name: TraceID
              url: $${__value.raw}
