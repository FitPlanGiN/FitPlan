---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: mysql
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: mysql_root_password
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-initdb-conifg
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: initdb.sql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: mysql-initdb-conifg
          configMap:
            name: {{ .Release.Name }}-initdb-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: mysql
spec:
  ports:
    - port: {{ .Values.service.port }}
      protocol: TCP
      targetPort: {{ .Values.service.port }}
  selector:
    app: mysql
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc
spec:
  storageClassName: "{{ .Values.storage.className }}"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.capacity }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-initdb-config
data:
  initdb.sql: |
    {{ .Values.config.initdb | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-secrets
data:
  mysql_root_password: "{{ .Values.secrets.rootPassword }}"
