---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.port }}
          args:
            - --enable-feature=exemplar-storage
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ .Release.Name }}-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.config.global.scrapeInterval }}
      evaluation_interval: {{ .Values.config.global.evaluationInterval }}

    scrape_configs:
    {{- range .Values.config.scrapeConfigs }}
      - job_name: '{{ .jobName }}'
        metrics_path: '{{ .metricsPath }}'
        static_configs:
          - targets: [{{ range $index, $target := .targets }}{{ if $index }}, {{ end }}"{{ $target }}"{{ end }}]
        {{- if .labels }}
            labels:
        {{- range $key, $value := .labels }}
              {{ $key }}: '{{ $value }}'
        {{- end }}
        {{- end }}
    {{- end }}
