---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-configure-schemas-topic
  labels:
    app: schema-registry
spec:
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      restartPolicy: Never
      containers:
        - name: configure-schemas-topic
          image: confluentinc/cp-kafka:7.5.0
          command:
            - sh
            - -c
            - |
              kafka-topics --bootstrap-server {{ .Values.config.kafkaStoreBootstrapServers }} \
              --create \
              --if-not-exists \
              --topic _schemas \
              --config cleanup.policy=compact || true
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.config.kafkaStoreBootstrapServers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      enableServiceLinks: false
      containers:
        - name: schema-registry
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: {{ .Values.config.hostName }}
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: {{ .Values.config.kafkaStoreBootstrapServers }}
            - name: SCHEMA_REGISTRY_LISTENERS
              value: {{ .Values.config.listeners }}
          ports:
            - containerPort: {{ .Values.service.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: schema-registry
  ports:
    - protocol: TCP
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
      name: schema-registry
